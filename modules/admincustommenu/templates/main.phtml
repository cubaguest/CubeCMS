<?php
// načtení detailu
$this->addFile("css://style.less");
$this->addFile("js://custommenu.js");
$jq = new JsPlugin_JQuery();
$this->addJsPlugin($jq);
$this->addJsPlugin(new JsPlugin_JsTree());
?>
<h1><?php ps($this->tr('Uživatelská menu')); ?></h1>
<div class="content-admin clearfix" id="custom-menu-list">
   <?php
   $this->moduleButtons = array(
       array(
           'title' => $this->tr('Přidat nové menu'),
           'icon' => Template_Toolbox2::ICON_ADD,
           'name' => $this->tr('Přidat nové menu'),
           'id' => 'buttonAddMenu',
       ),
//       array(
//           'title' => $this->tr('Upravit vybrané menu'),
//           'icon' => Template_Toolbox2::ICON_PEN,
//           'name' => $this->tr('Upravit menu'),
//           'id' => 'buttonEditMenu',
//       ),
       array(
           'title' => $this->tr('Přidat novou položku menu'),
           'icon' => Template_Toolbox2::ICON_ADD,
           'name' => $this->tr('Přidat položku menu'),
           'id' => 'buttonAddMenuItem',
       ),
//       array(
//           'title' => $this->tr('Upravit položku menu'),
//           'icon' => Template_Toolbox2::ICON_PEN,
//           'name' => $this->tr('Upravit položku menu'),
//           'id' => 'buttonEditMenuItem',
//       ),
   );
   if (CUBE_CMS_DEBUG_LEVEL > 0) {
      $this->moduleButtons[] = array(
          'title' => $this->tr('Obnovit'),
          'icon' => Template_Toolbox2::ICON_COG,
          'name' => $this->tr('Obnovit'),
          'id' => 'buttonRefreshMenuItem',
      );
   }
   $this->includeTpl('modules/buttons.phtml', true);
   ?>
   <div>
     <?php
     echo $this->formTest;
     ?>
   </div>
   <div class="row">
      <div class="col-md-8">
         <div id="menus-structure-wrap">
            <div id="menus-structure" class=""></div>
         </div>
      </div>
      <div class="col-md-4">
         <div id="form-edit-item">

         </div>
      </div>
   </div>

   <?php
   $this->formMenu->html()->setAttrib('id', 'form-add-menu');
   $this->includeFile('tpl://engine:components/modal.phtml', array('content' => (string) $this->formMenu,
       'id' => 'modal-form-add-menu',
       'header' => $this->tr('Vytvoření nového menu'),
       'close' => true,
       'large' => true,
       'footer' => '<button class="btn btn-default close-modal">' . $this->tr('Zavřít') . '</button>'));

   $this->form->html()->setAttrib('id', 'form-add-menu-item');
   $this->includeFile('tpl://engine:components/modal.phtml', array('content' => (string) $this->form,
       'id' => 'modal-form-add-menu-item',
       'header' => $this->tr('Vytvoření položky menu'),
       'close' => true,
       'large' => true,
       'footer' => '<button class="btn btn-default close-modal">' . $this->tr('Zavřít') . '</button>'));
   ?>
   <script type="text/javascript">
      $(document).ready(function () {
         $.jstree.plugins.addNodeInfo = function (options, parent) {
            this.redraw_node = function (obj, deep, callback, force_draw) {
               obj = parent.redraw_node.call(this, obj, deep, callback, force_draw);
               if (obj) {
                  var node = this.get_node($(obj).attr('id'));
//                  $(obj).find('.menu-item-info').remove();
                  if (node && node.data && node.type !== "root") {
                     var html = '<div class="menu-item-info">';
                     if (node.data.catname != "") {
                        html += '<strong><?php echo $this->tr('Kategorie') ?>:</strong> '
                                + '<a href="' + node.data.link + '" class="link-external">' + node.data.catname + '</span></a>';
                     } else {
                        html += '<strong><?php echo $this->tr('Odkaz') ?>:</strong> '
                                + '<a href="' + node.data.link + '" class="link-external">' + node.data.link + ' <span class="icon icon-external-link"></span></a>';
                     }
                     html += ',&nbsp;<strong><?php echo $this->tr('nové okno') ?>:</strong> ';
                     if (node.data.newWin) {
                        html += '<?php echo $this->tr('ano') ?>';
                     } else {
                        html += '<?php echo $this->tr('ne') ?>';
                     }
                     html += '</div>';
                     if($(obj).children('.menu-item-info').length === 0){
                        $(obj).children('a').after(html);
                     }
                  }
               }
               return obj;
            };
         };

         $.jstree.defaults.addHTML = {};
         var $structure = $('#menus-structure');
         var stopPreloadSelected = false;
         $structure
                 .on('select_node.jstree', function (e, node) {
                    if (!stopPreloadSelected) {
                       var url;
                       if (node.node.data.type === "root") {
                          url = '<?php echo $this->link()->route('editMenu', array('id' => '[ID]')) ?>';
                       } else {
                          url = '<?php echo $this->link()->route('editMenuItem', array('id' => '[ID]')) ?>';
                       }
                       $('#form-edit-item').load(url.replace('[ID]', node.node.data.itemid), function () {
                          CubeCMS.Form.initLangSelector();
                          $(this).fadeIn(400);
                       });
                    } else {
                       stopPreloadSelected = false;
                    }
                    if(node.node.type === "root"){
                        $('#form-add-menu-item select[name="edit_menu_item_root"]').val(node.node.data.itemid);
                    }
                  })
                 .on('deselect_node.jstree', function (e, node) {
                    $('#form-edit-item').fadeOut(400, function () {
                       $(this).html(null);
                    });
                 })
                 .on('move_node.jstree', function (e, node) {
                    console.log(node);
                    var parent = $structure.jstree(true).get_node(node.parent);
                    var parentOld = $structure.jstree(true).get_node(node.old_parent);
                    var newPos = {
                       id: node.node.data.itemid,
                       parent: node.parent === "#" ? 0 : parent.data.itemid,
                       parentold: node.old_parent === "#" ? 0 : parentOld.data.itemid,
                       position: node.position,
                       positionold: node.old_position
                    };
                    $.ajax({
                       type: "POST",
                       url: "<?php echo $this->link()->route("moveItem") ?>",
                       data: newPos,
                       success: function (data) {
                          CubeCMS.Loader.hideLoadBox();
                       }
                    });
                 })
                 .jstree({
                    core: {
                       data: {url: '<?php echo $this->link()->route('getTree') ?>'},
                       animation: 0,
                       "check_callback": true,
                       themes: {name: 'proton', responsive: true}
                    },
                    dnd: {
                       "is_draggable": function (node) {
                          if (node[0].type === 'root') {
                             return false;
                          }
                          return true;
                       }
                    },
                    types: {
                       "#": {
                          "max_children": -1,
                          "max_depth": -1,
                          "valid_children": ["root"]
                       },
                       "root": {
                          icon: "icon icon-list-alt",
                          "valid_children": -1
                       },
                       "default": {
                          icon: "icon icon-file-o",
                          "valid_children": -1
                       },
                       "globe": {
                          icon: "icon icon-globe",
                          "valid_children": -1
                       },
                       "folder": {
                          icon: "icon icon-folder",
                          "valid_children": -1
                       }
                    },
                    plugins: ["dnd", "themes", "types", "addNodeInfo"]
                 });

         $('#buttonAddMenu').on('click', function () {
            $('#modal-form-add-menu').show();
         });
         $('#buttonAddMenuItem').on('click', function () {
            $('#modal-form-add-menu-item').show();
         });
         $('#buttonEditMenu').attr('disable', 'disable');

         $('#form-edit-item').on('submit', '#form-edit-menu-item', function (e) {
            e.preventDefault();
            var $form = $(this);
            stopPreloadSelected = true;
            $.ajax({
               method: 'POST',
               url: $form.prop('action') + '?<?php echo Url_Request::URL_OUTPUT_TYPE?>=json',
               data: $form.serialize(),
               success: function (data) {
                  CubeCMS.Form.setMessages($form, data);
                  $structure.jstree(true).refresh();
               }
            });
            return false;
         });
         $('#form-add-menu, #form-add-menu-item').on('submit', function (e) {
            e.preventDefault();
            var $form = $(this);
            stopPreloadSelected = true;
            $.ajax({
               method: 'POST',
               url: $form.prop('action') + '?<?php echo Url_Request::URL_OUTPUT_TYPE?>=json',
               data: $form.serialize(),
               success: function (data) {
                  CubeCMS.Form.setMessages($form, data);
                  $structure.jstree(true).refresh();
                  if(data.errmsg.length === 0){
                     CubeCMS.Form.hideMessages($form);
                     $('#modal-form-add-menu, #modal-form-add-menu-item').hide();
                     $('input[type="text"]', $form).each(function(){
                        $(this).val(null);
                     });
                     $('select', $form).each(function(){
                        $(this).val(0);
                     });
                  }
               }
            });
            return false;
         });

         $('#buttonRefreshMenuItem').on('click', function (e) {
            $structure.jstree(true).refresh();
         });
      });
   </script>
</div>


<?php 
$this->addPageTitle($this->tr('Úprava souboru'));
$jQuery = new JsPlugin_JQuery();
$this->addJsPlugin($jQuery);

$this->addFile('css://style.less');
// codemirror
$this->addFile('js://codemirror/codemirror.js');
$this->addFile('css://codemirror/codemirror.css');
// addons
$this->addFile('js://codemirror/addon/display/fullscreen.js');
$this->addFile('js://codemirror/addon/edit/closetag.js');
$this->addFile('js://codemirror/addon/edit/closebrackets.js');
$this->addFile('js://codemirror/addon/edit/matchbrackets.js');

$this->addFile('js://codemirror/addon/fold/foldcode.js');
$this->addFile('js://codemirror/addon/fold/foldgutter.js');
$this->addFile('js://codemirror/addon/fold/brace-fold.js');

$this->addFile('css://codemirror/addon/hint/show-hint.css');
$this->addFile('js://codemirror/addon/hint/show-hint.js');
$this->addFile('js://codemirror/addon/hint/anyword-hint.js');

$this->addFile('js://codemirror/addon/selection/active-line.js');

$mode = 'html';
switch ($this->fileType) {
   case 'phtml':
   case 'html':
      $this->addFile('js://codemirror/mode/javascript/javascript.js');
      $this->addFile('js://codemirror/addon/edit/closetag.js');
      $this->addFile('js://codemirror/addon/hint/xml-hint.js');
      $this->addFile('js://codemirror/addon/hint/html-hint.js');
      $this->addFile('js://codemirror/addon/fold/xml-fold.js');
      $this->addFile('js://codemirror/addon/edit/matchtags.js');
      $this->addFile('js://codemirror/mode/xml/xml.js');
      $this->addFile('js://codemirror/mode/htmlmixed/htmlmixed.js');
   case 'php':
      
      $this->addFile('js://codemirror/mode/clike/clike.js');
      $this->addFile('js://codemirror/mode/php/php.js');
      $mode = 'php';
      
      break;
   case 'js':
      $this->addFile('js://codemirror/addon/lint/javascript-lint.js');
      $this->addFile('js://codemirror/mode/javascript/javascript.js');
      $mode = 'javascript';

      break;
   case 'less':
   case 'css':
      $this->addFile('js://codemirror/addon/lint/css-lint.js');
      $this->addFile('js://codemirror/addon/hint/css-hint.js');
      $this->addFile('js://codemirror/mode/css/css.js');
      $this->addFile('js://codemirror/mode/less/less.js');
      $mode = 'less';

      break;
}

// theme 
//$this->addFile('css://codemirror/mbo.css');
//$this->addFile('css://codemirror/eclipse.css');
//$this->addFile('css://codemirror/cobalt.css');
$this->addFile('css://codemirror/cobalt.css');

$grpsArr = array();
?>
<h1><?php ps(sprintf($this->tr('Úprava souboru %s'), null));?></h1>
<style type="text/css">
    .CodeMirror {border-top: 1px solid black; border-bottom: 1px solid black;}
</style>
<div class="content-admin">
   <?php
   $this->moduleButtons = array(
      'button-undo' => array(
         'link' => '#undo',
         'title' => $this->tr('Zpět'),
         'faicon' => 'undo',
      ),
      'button-redo' => array(
         'link' => '#redo',
         'title' => $this->tr('Vpřed'),
         'faicon' => 'repeat',
      ),
      'button-clear' => array(
         'link' => '#clear',
         'title' => $this->tr('Vyčistit'),
         'name' => $this->tr('Vyčistit'),
         'faicon' => 'ban',
      ),
      'button-save' => array(
         'link' => '#save',
         'title' => $this->tr('Uložit'),
         'name' => $this->tr('Uložit'),
         'faicon' => 'check',
      ),
      'button-close' => array(
         'link' => $this->link()->route()->param('file'),
         'title' => $this->tr('Zavřít'),
         'name' => $this->tr('Zavřít'),
         'faicon' => 'times',
      ),
   );
   $this->includeTpl('modules/buttons.phtml', true);
   
   ?>
   <textarea id="editor"><?php echo htmlspecialchars($this->fileContent)?></textarea>
</div>
<script type="text/javascript" charset="utf-8">
   /* <![CDATA[ */
   var te = document.getElementById("editor");
   var history = new Array();
   history.push($(te).val());
   
   CodeMirror.commands.autocomplete = function(cm) {
      CodeMirror.showHint(cm, CodeMirror.hint.anyword);
   };
   
   window.editor = CodeMirror.fromTextArea(te, {
      mode: "<?php echo $mode?>",
      lineNumbers: true,
      lineWrapping: true,
      indentUnit: 3,
      tabSize: 3,
      theme : 'cobalt',
      viewportMargin: Infinity, 
      matchTags: {bothTags: true},
      autoCloseTags: true, 
      autoCloseBrackets: true,
      styleActiveLine: true,
      extraKeys: {
         "Ctrl-Space": "autocomplete",
         "Ctrl-Q": function(cm){ 
            cm.foldCode(cm.getCursor()); 
         },
         "F11": function(cm) {
            cm.setOption("fullScreen", !cm.getOption("fullScreen"));
         },
         "Esc": function(cm) {
            if (cm.getOption("fullScreen")) cm.setOption("fullScreen", false);
         },
         "Ctrl-S": function(cm) {
            saveFile();
         }
      },
      foldGutter: true,
      gutters: ["CodeMirror-linenumbers", "CodeMirror-foldgutter", "breakpoints"]
   });
   
   editor.on("gutterClick", function(cm, n) {
      var info = cm.lineInfo(n);
      cm.setGutterMarker(n, "breakpoints", info.gutterMarkers ? null : makeMarker());
   });
   var charWidth = editor.defaultCharWidth(), basePadding = 4;
   
   editor.on("renderLine", function(cm, line, elt) {
      var off = CodeMirror.countColumn(line.text, null, cm.getOption("tabSize")) * charWidth;
      elt.style.textIndent = "-" + off + "px";
      elt.style.paddingLeft = (basePadding + off) + "px";
   });
    
   editor.on("change", function() {
      $('#button-save').addClass('not-saved');
      $('.CodeMirror').addClass('not-saved');
   });
   editor.refresh();

   function makeMarker() {
      var marker = document.createElement("div");
      marker.style.color = "#f00";
      marker.innerHTML = "●";
      return marker;
   }
   
   function saveFile() {
      console.log('Ukládám');
      $.ajax({
         type : 'POST',
         url : '<?php echo $this->link()->route('saveFile')?>',
         data : {
            file : '<?php echo $this->file?>',
            content : editor.getValue()
         },
         complete : function(){
            $('#button-save').removeClass('not-saved');
            $('.CodeMirror').removeClass('not-saved');
         }
      });
   }
   
   $('.edit-buttons button').button();
   
   $('#button-save').click(function(){ saveFile(); return false; });
   $('#button-clear').click(function(){ 
      if(confirm('<?php echo $this->tr('Opravdu vymazat obsah?')?>')){
         editor.setValue("");
      }
      return false;
   });
   $('#button-undo').click(function(){ editor.undo(); return false; });
   $('#button-redo').click(function(){ editor.redo(); return false; });
   $('#button-close').click(function(){ 
      if($('#button-save').hasClass('not-saved')){
         if(!confirm('<?php echo $this->tr('Obsah není uložen. Chcete jej opravdu zavřít?')?>')){
            return false;
         }
      }
   });
   
   /* ]]> */
</script>
<?php 
$this->addCssFile("style-edit.css");
$this->addPageTitle($this->_('Program'));
$this->addPageHeadline($this->_('Program'));

// donastavení formu
$this->form->html()->setAttrib('id', 'formProgram');

$this->itemIndex = 0;

?>

<div class="article-list">
   <?php echo $this->form->renderStart();?>
   <ul  class="program-days-list" id="program-days-list">
      <?php // tady vakreslení existujících položek
      foreach ($this->currentProgram as $day) {
         $this->type = 'day';
         $this->stages = $day->stage;
         $this->form->text->setValues($day['text']);
         $this->form->time->setValues($day['time']);
         $this->form->lenght->setValues($day['totime']);
         $this->includeTpl('items.phtml');
      }
      ?>
   </ul>
   <br />
   <p>
      <label for="programAddDay"><?php echo $this->_("Přidat")?>:</label>&nbsp;
      <input name="programAddDay" type="button" value="<?php echo $this->_("Přidat den")?>">
      <?php echo $this->form->save->controll();?>
   </p>
   <?php echo $this->form->renderEnd();?>
   <hr class="reseter" />
</div>

<?php 
$jQuery = new JsPlugin_JQuery();
$jQuery->setCfgParam("theme", "ui-lightness");
$jQuery->addUISortable();
$this->addJsPlugin($jQuery);
?>

<script type="text/javascript">
   /* <![CDATA[ */
   var itemIndex = <?php echo $this->itemIndex?>;
   $(document).ready(function(){
      $form = $('form#formProgram');

      refreshSortable($('#program-days-list'));
      refreshSortable($('ul.program-stages-list'), {connectWith: '.program-stages-list'});
      refreshSortable($('ul.program-items-list'), {connectWith: '.program-items-list'});

      // přidání dne
      $('input[name=programAddDay]', $form).live('click', function(){
         $.get('<?php echo $this->link()->route('programItem')?>',
         { type: 'day', index: itemIndex },
         function(data){
            $('ul#program-days-list', $form).append(data);
            itemIndex++;
            refreshSortable($('ul#program-days-list'));
         });
         showLoadBox($('#program-days-list'));
         return false;
      });

      // přidání stage
      $('input[name=programAddStage]', $form).live('click', function(){
         showLoadBox($('#program-days-list'));
         var $list = $(this).parent().children('ul.program-stages-list');
         $.get('<?php echo $this->link()->route('programItem')?>',
         { type: 'stage', index: itemIndex },
         function(data){
            $list.append(data);
            itemIndex++;
            refreshSortable($list, {
               connectWith: '.program-stages-list'
            });
//            $list.sortable("option" , {
//               connectWith: '.program-stages-list'
//            });
            hideLoadBox();
         });
         return false;
      });

      // přidání skupiny
      $('input[name=programAddBand]', $form).live('click', function(){
         showLoadBox($('#program-days-list'));
         var $list = $(this).parent().children('ul.program-items-list');
         $.get('<?php echo $this->link()->route('programItem')?>',
         { type: 'band', index: itemIndex },
         function(data){
            $list.append(data);
            itemIndex++;
            refreshSortable($list, {
               connectWith: '.program-items-list'
            });
//            $list.sortable("option" , {
//               connectWith: '.program-items-list'
//            });
            hideLoadBox();
         });
         return false;
      });

      // přidání jiného typu
      $('input[name=programAddOther]', $form).live('click', function(){
         showLoadBox($('#program-days-list'));
         var $list = $(this).parent().children('ul.program-items-list');
         $.get('<?php echo $this->link()->route('programItem')?>',
         { type: 'other', index: itemIndex },
         function(data){
            $list.append(data);
            itemIndex++;
            refreshSortable($list,{
               connectWith: '.program-items-list'
            });
//            $list.sortable("option" , {
//               connectWith: '.program-items-list'
//            });
            hideLoadBox();
         });
         return false;
      });

            $('a.program-button-remove', $form).live("click", function(){
               if(confirm("Smazat?") == false) return false;
               $(this).parent().parent("li").slideUp(200, function(){
                  $(this).remove();
               });
               return false;
            });

      //      $form.submit(function(){
      //         $('input[type=text]', $form).removeClass("formError");
      //         $('textarea', $form).removeClass("formError");
      //         var allOk = true;
      //         $('.text', $form).each(function(){
      //            if($(this).val() == ""){
      //               allOk = false;
      //               $(this).addClass("formError");
      //               return;
      //            }
      //         });
      //         if(allOk == true){
      //            $('input.prgItemTime', $form).each(function(){
      //               if($(this).val() == ""){
      //                  allOk = false;
      //                  $(this).addClass("formError");
      //                  return;
      //               }
      //            });
      //         }
      //
      //         if(allOk == false){
      //            alert("Nebyly vyplněny všechny položky (název, poznámka,..)");
      //            return false;
      //         }
      //      });
   });

   function checkTime(val){
      var datereg = /^([0-9]{1,2}):([0-9]{1,2})$/;
      return datereg.test(val);
   }

   // funkce převede date obj na řetězec času HH:mm
   function curTimeToStr(){
      var minutes = curTime.getMinutes();
      minutes=((minutes < 10) ? "0" : "") + minutes; // minuty s nulou
      return curTime.getHours().toString()+":"+minutes;
   }

   function refreshSortable(elem, options){
      if(typeof(options) == 'undefined') options = {};
      if(elem.data('sort') != true){
         $(elem, $form).sortable({
            forcePlaceholderSize: true ,
            forceHelperSize : true,
            handle: '.program-button-move',
            axis: 'y',
            //                  delay: 500,
            start: function() {},
            stop: function() {}
         });
         elem.data('sort', true);
      } else {
         elem.sortable('refresh');
      }
      elem.sortable("option" , options);
   }
   /* ]]> */
</script>
<?php  echo $this->toolbox; // TOOLBOX ?>
<?php $this->includeTpl("buttonback.phtml", true);?>
